drop keyspace blog_btoddb;

create keyspace blog_btoddb
    with placement_strategy = 'org.apache.cassandra.locator.SimpleStrategy'
    and strategy_options = {replication_factor:1};

use blog_btoddb;

create column family users
    with comment = 'Define the attributes for a User'
    and key_validation_class = 'UTF8Type'
    and comparator = 'UTF8Type'
    and default_validation_class = 'UTF8Type'
    ;

create column family posts
    with comment = 'Define the attributes for a Post'
    and key_validation_class = 'TimeUUIDType'
    and comparator = 'UTF8Type'
    and default_validation_class = 'UTF8Type'
    and column_metadata =
    [{
        column_name : 'create_ts',
        validation_class : LongType
    }]
    ;

create column family comments
    with comment = 'Define the attributes for a Comment'
    and key_validation_class = 'TimeUUIDType'
    and comparator = 'UTF8Type'
    and default_validation_class = 'UTF8Type'
    and column_metadata =
    [{
        column_name : 'create_ts',
        validation_class : LongType
    },
    {
        column_name : 'post_id',
        validation_class : TimeUUIDType
    }]
    ;

create column family user_posts
    with comment = 'Connects what posts a user created'
    and key_validation_class = 'UTF8Type'
    and comparator = 'TimeUUIDType(reversed=true)'
    ;

create column family user_comments
    with comment = 'Connects a User to its comments, ordered by time'
    and  key_validation_class = 'UTF8Type'
    and comparator = 'TimeUUIDType(reversed=true)'
    ;

create column family post_comments
    with comment = 'Connects a Post to its comments, ordered by time'
    and key_validation_class = 'TimeUUIDType'
    and comparator = 'TimeUUIDType(reversed=true)'
    ;

create column family posts_by_time
    with comment = 'Index for retrieving Posts by time'
    and key_validation_class = 'UTF8Type'
    and comparator = 'TimeUUIDType'
    ;

create column family votes
    with comment = 'Distributed counters for counting votes per comment or post'
    and key_validation_class = 'TimeUUIDType'
    and default_validation_class = CounterColumnType
    and comparator = 'UTF8Type'
    ;

create column family user_votes
    with comment = 'Record a user\'s vote on a comment/post, to insure a user only votes once per comment or post'
    and key_validation_class = 'UTF8Type'
    and comparator = 'TimeUUIDType'
    ;

create column family posts_sorted_by_vote
    with comment = 'Index for retrieving posts by vote'
    and comparator = 'CompositeType(LongType(reversed=true), TimeUUIDType)'
    ;

create column family post_comment_votes_changed
    with comment = 'Flag indicating the given post needs its comments sorted'
    and key_validation_class = 'TimeUUIDType'
    and comparator = 'BytesType'
    ;

create column family post_comments_sorted_by_vote
    with comment = 'Index for retrieving a post\'s comments by vote'
    and key_validation_class = 'TimeUUIDType'
    and comparator = 'CompositeType(LongType(reversed=true), TimeUUIDType(reversed=true))'
    ;
